/* At the top of the file, update the CSS variables */
:root {
  /* Dark theme variables (default) */
  --background-darker: #1a1a1a;
  --background-dark: #2a2a2a;
  --text-primary: #ffffff;
  --text-secondary: #a0a0a0;
  --primary-color: #646cff;
  --primary-hover: #747bff;
  --primary-rgb: 100, 108, 255;
  --border-color: #3a3a3a;
}

/* Light theme variables */
.light {
  --background-darker: #f0f0f0;
  --background-dark: #ffffff;
  --text-primary: #1a1a1a;
  --text-secondary: #666666;
  --primary-color: #4a51cc;
  --primary-hover: #5a62ff;
  --primary-rgb: 74, 81, 204;
  --border-color: #dddddd;
  --highlight-color: rgba(0, 123, 255, 0.1);
  --accent-color: #0056b3;
  --accent-hover-color: #004494;
}

/* Add transition for smooth theme switching */
.container {
  transition: background-color 0.3s ease, color 0.3s ease;
  padding: 0;
}

/* Update the tooth logo color in light mode */
.light .tooth-logo {
  filter: brightness(0.8);
}

/* Update message bubble in light mode */
.light .message-bubble {
  background: var(--background-dark);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.light .message-bubble:after {
  border-bottom-color: var(--background-dark);
}

/* Update bank items in light mode */
.light .bank-item {
  border: 1px solid var(--border-color);
}

/* Update empty state text in light mode */
.light .empty-state::after {
  color: rgba(0, 0, 0, 0.5);
  text-shadow: none;
}

/* Update theme toggle hover in light mode */
.light .theme-toggle:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

#root {
  width: 100vw;
  min-height: 100vh;
  margin: 0;
  padding: 0;
  text-align: center;
  box-sizing: border-box;
  overflow-x: hidden;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100vh;
  padding: 0;
  text-align: center;
  background-color: var(--background-darker);
  position: relative;
  border: none;
  box-sizing: border-box;
  overflow: hidden;
}

.options {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: flex-start;
  width: auto;
  position: absolute;
  top: 2rem;
  left: 0;
  padding-left: 1rem;
}

.large-button {
  font-size: 1.2rem;
  padding: 0.8rem 1rem;
  min-width: 60px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.8rem;
  margin: 0;
  border-radius: 8px;
  border: 2px solid var(--primary-color);
  background-color: var(--background-dark);
  color: var(--text-primary);
  text-align: left;
  transition: all 0.25s ease;
  width: fit-content;
  max-width: 200px;
  box-sizing: border-box;
  white-space: nowrap;
  line-height: 1.2;
  height: auto;
}

.large-button:hover {
  background-color: var(--primary-color);
  border-color: var(--primary-hover);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.button-icon {
  font-size: 1.4rem;
  line-height: 1;
  display: flex;
  align-items: center;
  flex-shrink: 0;
}

.button-text {
  flex: 0 1 auto;
  white-space: nowrap;
  padding-right: 0.5rem;
}

h1 {
  color: var(--text-primary);
  text-shadow: 0 0 10px var(--primary-color);
  margin-bottom: 2rem;
}

p {
  color: var(--text-secondary);
  margin-bottom: 2rem;
}

.tooth-logo {
  width: 120px;
  height: 120px;
  margin-bottom: 3rem;
  filter: drop-shadow(0 0 10px var(--primary-color));
  animation: float 3s ease-in-out infinite;
  pointer-events: auto;
  cursor: default;
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

.tooth-logo path {
  stroke: var(--primary-color);
}

.import-options-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin: 2rem 0;
  width: 100%;
  max-width: 400px;
}

.import-option-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  width: 100%;
  padding: 1.5rem;
  background-color: var(--background-dark);
  border: 2px solid var(--primary-color);
  border-radius: 8px;
  color: var(--text-primary);
  cursor: pointer;
  transition: all 0.25s ease;
  font-size: 1.2rem;
}

.import-option-btn:hover {
  background-color: var(--primary-color);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.import-icon {
  font-size: 1.5rem;
}

.back-button {
  padding: 0.6rem 1rem;
  background: none;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
  min-width: 70px;
  text-align: center;
  font-size: 1.2rem;
}

.back-button:hover {
  background-color: rgba(var(--primary-rgb), 0.1);
  transform: translateY(-2px);
}

.message-bubble {
  position: relative;
  background: var(--background-dark);
  border: none;
  border-radius: 12px;
  padding: 0.8rem 1.2rem;
  margin-top: 3rem;
  margin-bottom: 2rem;
  font-size: 1rem;
  color: var(--text-primary);
  opacity: 1;
  transition: opacity 1s ease;
}

.message-bubble.fade-out {
  opacity: 0;
}

/* Adjust the arrow position */
.message-bubble:after {
  content: '';
  position: absolute;
  top: -15px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 15px solid var(--background-dark);
}

/* Remove the inner arrow since we don't have a border anymore */
.message-bubble:before {
  display: none;
}

.create-form {
  width: 100%;
  max-width: min(55vw, 800px);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-top: 0;
  position: relative;
  margin-bottom: 0;
  padding-bottom: 2rem;
  margin-right: 2rem;
  min-width: 300px;
}

/* Add a class to the answer choices input group */
.answer-choices-group {
  position: relative;
  width: 100%;
}

/* Add separation between flashcard sides only */
[data-mode="create"] .create-form:not(:has(#explanation)) .answer-choices-group {
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 1px solid var(--border-color);
}

.input-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  position: relative;
  padding-right: 0;
}

.input-group label {
  color: var(--text-primary);
  font-size: 1.1rem;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
  padding-right: 0.5rem;
  width: 100%;
}

.input-box {
  width: 100%;
  padding: 0.6rem;
  border: 2px solid var(--primary-color);
  border-radius: 8px;
  background-color: var(--background-dark);
  color: var(--text-primary);
  font-size: 1rem;
  resize: none;
  min-height: 120px;
  height: 120px;
  transition: opacity 0.3s ease, border-color 0.3s ease;
  white-space: pre-wrap;
  overflow-wrap: break-word;
  overflow-x: auto;
}

/* Add specific styling for explanation box if needed */
.explanation-box {
  min-height: 120px;
  height: 120px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
  overflow-x: auto;
}

.input-box:focus {
  outline: none;
  border-color: var(--primary-hover);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2);
}

.input-box::placeholder {
  color: var(--text-secondary);
  opacity: 0.6;
}

.input-box:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  border-color: var(--border-color);
}

/* Update name input styling */
.name-input-group {
  position: relative;
  width: 100%;
  max-width: min(55vw, 800px);
  height: 4rem;
  margin: 0 auto;
  margin-top: 0.25rem;
  margin-bottom: 1rem;
  background-color: var(--background-darker);
  z-index: 90;
  min-width: 300px;
}

.name-input {
  min-height: unset;
  height: 4rem;
  background: none;
  border: none;
  text-align: center;
  font-size: 2.4rem;
  font-weight: bold;
  padding: 0 1rem;
  color: var(--text-primary);
  width: 100%;
  line-height: 1;
  outline: none;
  box-shadow: none;
}

.name-input:focus {
  outline: none;
  border: none;
  box-shadow: none;
  background: none;
}

/* Remove any inherited styles from input-box class */
.name-input.input-box {
  background: none;
  border: none;
  box-shadow: none;
}

.name-input.input-box:focus {
  outline: none;
  border: none;
  box-shadow: none;
  background: none;
}

/* Style the placeholder */
.name-input::placeholder {
  color: var(--text-secondary);
  opacity: 0.3;
}

.create-dropdown-container {
  position: relative;
}

.create-dropdown {
  position: absolute;
  left: 100%;
  top: 0;
  margin-left: 0.5rem;
  background-color: var(--background-dark);
  border: 2px solid var(--primary-color);
  border-radius: 8px;
  overflow: hidden;
  z-index: 100;
  display: flex;
  flex-direction: row;
}

.create-option {
  display: flex;
  align-items: center;
  padding: 0.8rem 1.6rem;
  background: none;
  border: none;
  color: var(--text-primary);
  cursor: pointer;
  font-size: 1rem;
  text-align: left;
  transition: background-color 0.2s;
  white-space: nowrap;
}

.create-option:focus {
  outline: none;
  box-shadow: none;
  border: none;
}

.create-option:not(:last-child) {
  border-right: 1px solid var(--primary-color);
  border-bottom: none;
}

.create-option:hover {
  background-color: var(--primary-color);
}

.create-options {
  display: flex;
  gap: 2rem;
  margin: 2rem 0;
}

.create-type-button {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
  background-color: var(--background-dark);
  border: 2px solid var(--primary-color);
  border-radius: 12px;
  color: var(--text-primary);
  cursor: pointer;
  transition: all 0.25s ease;
  min-width: 150px;
}

.create-type-button .button-icon {
  font-size: 2.5rem;
}

.create-type-button .button-text {
  font-size: 1.2rem;
  padding: 0;
}

.create-type-button:hover {
  background-color: var(--primary-color);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.top-gum-container {
  position: absolute;
  bottom: 1rem;
  left: 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
  width: 160px;
  opacity: 1;
  transition: opacity 0.3s ease;
}

/* Hide the logo when in create mode or any other mode */
.container[data-mode="create"] .top-gum-container {
  opacity: 0;
  pointer-events: none;
}

/* For <img> tag approach */
.top-gum-logo {
  content: url('./assets/top-gum-logo.svg');
  width: 173px;
  height: auto;
  margin: 0;
}

.light .top-gum-logo {
  content: url('./assets/top-gum-logo-light.svg');
  width: 173px;
  height: auto;
}

.top-gum-text {
  color: #64B5F6;
  font-size: 0.88rem;
  font-weight: bold;
  text-shadow: 0 0 5px rgba(100, 181, 246, 0.5);
  white-space: nowrap;
}

.main-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  gap: 1rem;
  padding: 0 6rem 0 3rem;
}

.left-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  flex: 1;
  padding-top: 2rem;
}

.right-section {
  display: flex;
  flex-direction: column;
  width: clamp(400px, 40%, 600px);
  height: clamp(400px, 78vh, 900px);
  background-color: var(--background-dark);
  border: none;
  border-radius: 12px;
  overflow: visible;
  padding-bottom: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.tabs {
  display: flex;
  background-color: var(--background-darker);
  border-bottom: 1px solid var(--border-color);
  width: 100%;
}

.tab {
  flex: 1;
  padding: 0.5rem 0;
  color: var(--text-primary);
  background: none;
  border: none;
  border-right: 1px solid var(--border-color);
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.2s ease;
  text-align: center;
}

.tab:last-child {
  border-right: none;
}

.tab.active {
  background-color: var(--primary-color);
  color: var(--background-darker);
}

.tab:hover:not(.active) {
  background-color: rgba(100, 108, 255, 0.1);
}

.tab-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  padding: 1rem;
  min-height: 0;
}

.tooth-button {
  background: none;
  border: none;
  padding: 0;
  cursor: default;
  position: relative;
  width: 120px;
  height: 84px;
  pointer-events: none;
  outline: none;
  margin-top: auto;
}

/* Add these specific focus styles */
.tooth-button:focus {
  outline: none;
  border: none;
  box-shadow: none;
}

.tooth-button:focus-visible {
  outline: none;
}

/* Remove any hover states */
.tooth-button:hover,
.tooth-logo:hover {
  background: none;
  cursor: default;
}

.bank-container {
  flex: 1;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  position: relative;
  height: auto;
  min-height: 0;
  overflow-y: auto;
  margin: 0.5rem;
}

.dragging-over {
  border-color: var(--text-secondary);
  background-color: rgba(var(--text-secondary), 0.1);
}

.bank-header {
  display: flex;
  justify-content: space-between;
  padding: 0;
  font-size: 0.9rem;
  font-weight: bold;
  border-bottom: 1px solid var(--border-color);
  color: var(--text-primary);
  background-color: var(--background-darker);
  position: sticky;
  top: 0;
  z-index: 10;
}

.sort-button {
  flex: 1;
  padding: 0.3rem 1rem;
  background: none;
  border: none;
  color: var(--text-primary);
  font-size: inherit;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.sort-button:first-child {
  justify-content: flex-start;
}

.sort-button:last-child {
  justify-content: flex-end;
}

.sort-button:hover {
  background-color: rgba(var(--primary-rgb), 0.1);
}

.sort-button.active {
  color: var(--text-primary);
  font-weight: bold;
}

.sort-arrow {
  display: inline-block;
  font-weight: bold;
  color: var(--text-secondary);
}

.bank-item {
  display: flex;
  justify-content: space-between;
  padding: clamp(0.5rem, 1.5vh, 0.75rem) clamp(0.75rem, 2vw, 1rem);
  border-radius: 4px;
  background-color: var(--background-dark);
  margin-bottom: clamp(0.25rem, 1vh, 0.5rem);
  cursor: pointer;
  transition: all 0.2s ease;
  user-select: none;
  font-size: clamp(0.8rem, 1.5vw, 1rem);
  color: var(--text-primary);
  position: relative;
  z-index: 1;
}

/* Restore bank item left container and number styling */
.bank-item-left {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.bank-item-number {
  color: var(--primary-color);
  font-weight: bold;
  min-width: clamp(1.2rem, 2vw, 1.5rem);
}

/* Add a subtle scale effect on active */
.bank-item:active {
  transform: scale(0.98);
}

.bank-item:hover {
  background-color: var(--background-darker);
}

/* Update light mode specific styles */
.light .bank-item {
  color: var(--text-primary);
  background-color: var(--background-dark);
}

.light .bank-item:hover {
  background-color: var(--background-darker);
}

/* Update selected state for both themes */
.bank-item.selected {
  background-color: var(--background-darker);
  border: none;
  color: var(--text-primary);
  box-shadow: inset 0 0 0 1px var(--border-color);
}

.empty-state {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 0;
  position: relative;
}

.empty-state::after {
  content: 'Drag + Drop';
  position: absolute;
  color: rgba(255, 255, 255, 0.3);
  font-size: clamp(0.9rem, 1.5vw, 1.2rem);
  font-style: italic;
  opacity: 0.6;
  pointer-events: none;
  text-shadow: 0 0 2px rgba(255, 255, 255, 0.2);
}

.empty-state.create-mode::after {
  content: none;
}

.create-content {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 1rem 1rem max(4vw, 6rem);
  margin: 1rem max(2vw, 3rem) 0;
  position: relative;
  overflow-y: auto;
  min-width: 300px;
}

.theme-toggle {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
  z-index: 100;
}

.theme-toggle:hover {
  transform: rotate(15deg);
}

/* Remove the default button styles */
.theme-toggle:focus {
  outline: none;
}

/* Optional: add a subtle background on hover */
.theme-toggle:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Optional: Add specific light mode styling if needed */
.light .bank-header {
  border-bottom-color: var(--border-color);
}

/* Add styles for the enter hint tooltip */
.enter-hint {
  position: absolute;
  bottom: -3.5rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--background-dark);
  color: var(--text-secondary);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  font-size: 0.9rem;
  white-space: nowrap;
  animation: fadeIn 0.3s ease;
  border: 1px solid var(--border-color);
}

@keyframes fadeIn {
  from { opacity: 0; transform: translate(-50%, -10px); }
  to { opacity: 1; transform: translate(-50%, 0); }
}

/* Style the save button */
.save-button {
  padding: 0.6rem 1rem;
  font-size: 1.2rem;
  min-width: 70px;
  gap: 0.4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--primary-color);
  border: none;
  border-radius: 8px;
  color: var(--background-dark);
  font-weight: bold;
  cursor: pointer;
  transition: all 0.25s ease;
}

.save-button:hover {
  background-color: var(--primary-hover);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Update button container spacing */
.button-container {
  position: absolute;
  top: 1rem;
  left: 5rem;
  gap: 1.5rem;
  z-index: 100;
  display: flex;
  flex-direction: column;
}

/* Update add question button sizing */
/* .add-question-button {
  position: fixed;
  left: 5rem;
  top: 55%;
  transform: translateY(-50%);
  width: clamp(40px, 5vw, 60px);
  height: clamp(40px, 5vw, 60px);
  ... other old styles ...
} */

/* Remove any hover/focus styles that might add borders */
/* .add-question-button:hover,
.add-question-button:focus,
.add-question-button:active {
  outline: none;
  border: none;
  background-color: #45a049;
  transform: translateY(-50%) scale(1.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
} */

/* Remove the filter style completely */
/* .light .plus-icon {
  filter: none;
} */

/* Add specific styling for create mode */
.bank-items {
  flex: 1;
  padding: 1rem;
  padding-top: 0;
}

/* Update bank-header for create mode */
.create-content + .right-section .bank-header {
  justify-content: center;
  padding: 1rem;
}

/* Or alternatively, we can be more specific */
.bank-header span {
  flex: 1;
  text-align: center;
  font-size: 1.2rem;
  padding: 0.5rem 0;
  font-weight: bold;
  color: var(--text-primary);
}

/* Keep the sort buttons left/right aligned in main screen */
.sort-button:first-child {
  justify-content: flex-start;
}

.sort-button:last-child {
  justify-content: flex-end;
}

/* Add these CSS variables to your existing light/dark theme variables */
.dark {
  --highlight-color: rgba(79, 70, 229, 0.2);
  --accent-color: #4F46E5;
  --accent-hover-color: #4338CA;
}

/* Add responsive styles for smaller screens */
@media (max-width: 768px) {
  .main-content {
    padding: 0 2rem;
  }

  .right-section {
    width: 100%;
    max-width: 600px;
    height: clamp(300px, 50vh, 600px);
    margin: 0 auto;
  }

  .bank-container {
    max-height: calc(100% - 100px);
  }

  .left-section {
    padding-top: 1rem;
  }

  .button-container {
    gap: 1.5rem;
  }
  
  .back-button, .save-button {
    font-size: 0.9rem;
    padding: 0.3rem 0.6rem;
  }
  
  .button-icon {
    font-size: 1rem;
  }
}

/* Add responsive styles for very small screens */
@media (max-width: 480px) {
  .bank-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .bank-item-left {
    width: 100%;
  }

  .button-container {
    flex-direction: row;
    gap: 1.5rem;
  }
}

.questions-list {
  width: 100%;
  overflow-y: auto;
  max-height: calc(100vh - 200px);
}

.question-item {
  display: flex;
  align-items: flex-start;
  padding: 10px;
  margin: 5px;
  background: var(--background-dark);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
  color: var(--text-primary);
  user-select: none;  /* Prevent text selection while clicking */
}

.question-item:hover {
  background: var(--background-darker);
}

.question-item.selected {
  background: var(--highlight-color);
  border: 2px solid var(--accent-color);
  transform: translateX(4px);
}

.question-number {
  margin-right: 10px;
  min-width: 25px;
}

.question-preview {
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Add these styles after the .action-buttons class */

.edit-button, .remove-button {
  padding: 0.5rem 1rem;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  min-width: 80px;
}

.edit-button {
  background-color: rgba(var(--primary-rgb), 0.1);
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
}

.edit-button:hover {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.remove-button {
  background-color: rgba(220, 53, 69, 0.1);
  border: 1px solid #dc3545;
  color: #dc3545;
}

.remove-button:hover {
  background-color: #dc3545;
  border-color: #dc3545;
  color: white;
}

.action-buttons {
  display: flex;
  gap: 1rem;
  padding: 1rem;
  justify-content: center;
  border-top: 1px solid var(--border-color);
}

/* Add these new styles */
.label-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.expand-button {
  position: static;
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 0.5rem;
  font-size: 1.2rem;
  opacity: 0.7;
  transition: opacity 0.2s ease, color 0.2s ease, transform 0.2s ease;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
}

.expand-button:hover,
.expand-button:focus {
  opacity: 1;
  color: var(--primary-color);
  transform: scale(1.1);
  outline: none;
  background: none;
}

.expand-button:focus-visible {
  outline: none;
  background: none;
}

/* Expanded input overlay */
.expanded-input-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  padding: 2rem;
}

.expanded-input-container {
  background-color: var(--background-dark);
  padding: 2rem;
  width: 80%;
  height: 80%;
  border-radius: 12px;
  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  box-sizing: border-box;
}

.expanded-input {
  flex: 1;
  width: 100%;
  padding: 1rem;
  margin-bottom: 1rem;
  font-size: 1.1rem;
  background-color: var(--background-darker);
  color: var(--text-primary);
  border: 2px solid var(--primary-color);
  border-radius: 8px;
  resize: none;
  box-sizing: border-box;
}

/* Default style for answer choices - no word wrap */
.expanded-input[data-input-type="side2"] {
  white-space: pre;
  overflow-wrap: normal;
  word-wrap: normal;
  overflow-x: auto;
}

/* Style for questions and explanations - with word wrap */
.expanded-input[data-input-type="side1"],
.expanded-input[data-input-type="explanation"] {
  white-space: pre-wrap;
  overflow-wrap: break-word;
  word-wrap: break-word;
  overflow-x: hidden;
}

/* Keep the scrollbar styling for answer choices */
.expanded-input[data-input-type="side2"]::-webkit-scrollbar {
  height: 16px;
  cursor: pointer;
}

.expanded-input[data-input-type="side2"]::-webkit-scrollbar-track {
  background: var(--background-darker);
  border-radius: 8px;
  margin: 0 8px;
  cursor: pointer;
}

.expanded-input[data-input-type="side2"]::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 8px;
  border: 4px solid var(--background-darker);
  min-width: 40px;
  cursor: pointer;
}

.expanded-input[data-input-type="side2"]::-webkit-scrollbar-thumb:hover {
  background: var(--primary-hover);
}

/* Update controls section */
.expanded-controls {
  display: flex;
  justify-content: flex-end;
}

.expanded-button.expanded-back {
  background: none;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  padding: 0.8rem 1.6rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.2s ease;
}

.expanded-button.expanded-back:hover {
  background-color: rgba(var(--primary-rgb), 0.1);
  transform: translateY(-2px);
}

/* Remove unused styles */
.expanded-save,
.expanded-cancel {
  display: none;
}

/* Update answer choices input styling */
.answer-choices-group .input-box {
  white-space: pre;
  overflow-x: auto;
  overflow-wrap: normal;
  word-wrap: normal;
}

/* Make scrollbar taller and improve interaction */
.answer-choices-group .input-box::-webkit-scrollbar {
  height: 16px;
  cursor: pointer;
}

.answer-choices-group .input-box::-webkit-scrollbar-track {
  background: var(--background-darker);
  border-radius: 8px;
  margin: 0 8px;
  cursor: pointer;
}

.answer-choices-group .input-box::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 8px;
  border: 4px solid var(--background-darker);
  min-width: 40px;
  cursor: pointer;
}

.answer-choices-group .input-box::-webkit-scrollbar-thumb:hover {
  background: var(--primary-hover);
}

/* Add padding to prevent text from being under scrollbar */
.answer-choices-group .input-box {
  padding-bottom: 20px;
}

/* Fix cursor on scrollbar interaction */
.answer-choices-group .input-box:hover::-webkit-scrollbar-thumb {
  cursor: pointer;
}

.answer-choices-group .input-box::-webkit-scrollbar-button {
  cursor: pointer;
}

/* Update container for create mode */
.container[data-mode="create"] {
  height: 100vh;
  min-height: 100vh;
  overflow: hidden;
  padding-bottom: 0;
  border: none;
}

/* Update main content in create mode */
.container[data-mode="create"] .main-content {
  height: 100vh;
  min-height: 0;
  align-items: flex-start;
  overflow: hidden;
  padding: 0 max(2vw, 2rem);
}

/* Update left section in create mode */
.container[data-mode="create"] .left-section {
  height: 100vh;
  min-height: 0;
  overflow: hidden;
}

/* Update create content */
.create-content {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 1rem 1rem max(4vw, 6rem);
  margin: 1rem max(2vw, 3rem) 0;
  position: relative;
  overflow-y: auto;
  min-width: 300px;
}

/* Keep the name input sticky while scrolling */
.name-input-group {
  position: relative;
  width: 100%;
  max-width: min(55vw, 800px);
  height: 4rem;
  margin: 0 auto;
  margin-top: 0.25rem;
  margin-bottom: 1rem;
  background-color: var(--background-darker);
  z-index: 90;
  min-width: 300px;
}

/* Update right section width in create mode */
.container[data-mode="create"] .right-section {
  width: min(30vw, 500px);
  min-width: 300px;
  margin-right: max(2vw, 2rem);
  margin-top: 6rem;
  padding-top: 0;
  background-color: transparent;
  border-radius: 0 0 12px 12px;
}

/* Update bank header in create mode */
.container[data-mode="create"] .bank-header {
  padding-top: 0;
  background-color: var(--background-darker);
  border-radius: 8px 8px 0 0;
}

/* Update bank container in create mode */
.container[data-mode="create"] .bank-container {
  background-color: var(--background-dark);
  border-top: 1px solid var(--border-color);
  margin-top: 0;
  border-radius: 0 0 8px 8px;
}

/* Update bank header span in create mode */
.bank-header span {
  flex: 1;
  text-align: center;
  font-size: 1.2rem;
  padding: 0.5rem 0;
  font-weight: bold;
  color: var(--text-primary);
}

/* Add responsive styles for medium screens */
@media (max-width: 1200px) {
  .create-form,
  .name-input-group {
    max-width: min(50vw, 700px);
  }
}

/* Add responsive styles for smaller screens */
@media (max-width: 900px) {
  .create-form,
  .name-input-group {
    max-width: min(45vw, 600px);
  }
}

/* Update questions controls to handle multiple buttons */
.questions-controls {
  padding: 1rem;
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: center;
  gap: 1rem;  /* Add gap between buttons */
}

/* Style the add button to match remove button style */
.add-question-button {
  padding: 0.6rem 1.2rem;
  background-color: rgba(76, 175, 80, 0.1);
  border: 1px solid #4CAF50;
  color: #4CAF50;
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  position: static;  /* Remove fixed positioning */
  transform: none;   /* Remove transform */
  min-width: 100px;
}

.add-question-button:hover {
  background-color: #4CAF50;
  color: white;
  transform: translateY(-2px);
}

.add-question-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* Update plus icon styling */
.plus-icon {
  font-size: inherit;
  font-weight: bold;
  color: inherit;
  line-height: 1;
}

/* Style the remove button */
.remove-question-button {
  padding: 0.6rem 1.2rem;
  background-color: rgba(220, 53, 69, 0.1);
  border: 1px solid #dc3545;
  color: #dc3545;
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 140px;  /* Ensure enough space for the count */
}

.remove-question-button:hover {
  background-color: #dc3545;
  color: white;
  transform: translateY(-2px);
}

.remove-question-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* Remove focus outline from create options */
.create-option:focus {
  outline: none;
}

/* Update these styles for modified questions to use orange */
.question-item.modified {
  background-color: rgba(255, 152, 0, 0.1);  /* Soft orange background */
  border-left: 3px solid #ff9800;  /* Material Design orange */
}

.light .question-item.modified {
  background-color: rgba(255, 152, 0, 0.15);  /* Slightly more visible in light mode */
  border-left: 3px solid #f57c00;  /* Darker orange for light mode */
}

/* Update the selected state to work with modified state */
.question-item.selected.modified {
  background-color: rgba(255, 152, 0, 0.2);  /* Slightly darker when selected */
  border-left: 3px solid #fb8c00;  /* Slightly darker orange */
}

.light .question-item.selected.modified {
  background-color: rgba(255, 152, 0, 0.25);  /* Even more visible when selected in light mode */
  border-left: 3px solid #ef6c00;  /* Even darker orange for light mode */
}

/* Add styles for the confirmation modal */
.confirmation-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.confirmation-modal {
  background-color: var(--background-dark);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);
  max-width: 400px;
  width: 90%;
}

.confirmation-message {
  color: var(--text-primary);
  margin-bottom: 2rem;
  font-size: 1.1rem;
  line-height: 1.5;
}

.confirmation-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.confirmation-button {
  padding: 0.6rem 1.2rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.2s ease;
  min-width: 100px;
  text-align: center;
}

.confirmation-button.primary {
  background-color: var(--primary-color);
  border: none;
  color: white;
}

.confirmation-button.primary:hover {
  background-color: var(--primary-hover);
  transform: translateY(-2px);
}

.confirmation-button.secondary {
  background: none;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
}

.confirmation-button.secondary:hover {
  background-color: rgba(var(--primary-rgb), 0.1);
  transform: translateY(-2px);
}

.confirmation-button.danger {
  background-color: rgba(220, 53, 69, 0.1);
  border: 1px solid #dc3545;
  color: #dc3545;
}

.confirmation-button.danger:hover {
  background-color: #dc3545;
  color: white;
  transform: translateY(-2px);
}

/* Update image upload section styles */
.image-upload-section {
  margin-top: 10px;
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: center;
}

/* Add thumbnail styles */
.image-thumbnail-container {
  position: relative;
  display: inline-block;
  margin-right: 8px;
}

.image-thumbnail-container:last-child {
  margin-right: 0;
}

.image-thumbnail {
  position: relative;
  width: 40px;
  height: 40px;
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  background: var(--background-dark);
}

.image-thumbnail .remove-image-button {
  position: absolute;
  top: -6px;
  right: -6px;
  width: 16px;
  height: 16px;
  padding: 0;
  border-radius: 50%;
  background: #dc3545;
  border: 1px solid #dc3545;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  opacity: 0;
  transition: opacity 0.2s ease, background-color 0.2s ease;
  cursor: pointer;
}

.image-thumbnail:hover .remove-image-button {
  opacity: 1;
}

.image-thumbnail .remove-image-button:hover {
  background: #c82333;
  border-color: #bd2130;
}

/* Hover preview styles */
.image-preview-hover {
  position: absolute;
  bottom: calc(100% + 8px);
  left: 50%;
  transform: translateX(-50%);
  background: var(--background-dark);
  padding: 8px;
  border-radius: 8px;
  border: 1px solid var(--border-color);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  z-index: 100;
}

.image-preview-hover img {
  max-width: 300px;
  max-height: 300px;
  display: block;
  object-fit: contain;
}

.image-preview-hover::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-top: 8px solid var(--border-color);
}

/* Update button styles */
.image-upload-button {
  padding: 5px 10px;
  border-radius: 4px;
  border: 1px solid var(--border-color);
  background: var(--background-dark);
  color: var(--text-primary);
  cursor: pointer;
  font-size: 0.9em;
  display: flex;
  align-items: center;
  gap: 5px;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.image-upload-button:hover {
  background: var(--background-darker);
  transform: translateY(-1px);
}

.image-upload-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* Add styles for the image count */
.image-upload-button span {
  opacity: 0.7;
  font-size: 0.8em;
  margin-left: 4px;
}

.thumbnail-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Add styles for the answer label and hint */
.answer-label {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 10px;
}

.correct-answer-hint {
  font-style: italic;
  color: #dc3545;
  margin-left: 40px;
  font-size: 0.9em;
}

/* Warning Modal Styles */
.warning-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.warning-modal {
  background-color: var(--bg-color);
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  width: 90%;
  max-width: 500px;
  max-height: 80vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.warning-header {
  background-color: #f8d7da;
  color: #721c24;
  padding: 12px 16px;
  font-weight: bold;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  display: flex;
  align-items: center;
  gap: 8px;
}

.warning-message {
  padding: 16px;
  color: var(--text-color);
  max-height: 60vh;
  overflow-y: auto;
}

.warning-message p {
  margin: 8px 0;
}

.warning-buttons {
  display: flex;
  justify-content: flex-end;
  padding: 12px 16px;
  gap: 12px;
  border-top: 1px solid var(--border-color);
}

.warning-button {
  padding: 8px 16px;
  border-radius: 4px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.warning-button.primary {
  background-color: #dc3545;
  color: white;
  border: none;
}

.warning-button.primary:hover {
  background-color: #c82333;
}

.warning-button.secondary {
  background-color: transparent;
  color: var(--text-color);
  border: 1px solid var(--border-color);
}

.warning-button.secondary:hover {
  background-color: var(--hover-color);
}

/* Add a container for the tooth logo and selected item name */
.tooth-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  height: 200px; /* Increased height */
  margin-bottom: 10px;
}

/* Update the tooth-button styling to have a fixed position in the container */
.tooth-button {
  background: none;
  border: none;
  padding: 0;
  cursor: default;
  position: relative;
  width: 120px;
  height: 84px;
  pointer-events: none;
  outline: none;
  margin-top: auto; /* Push to the bottom of container */
}

/* Update selected item name positioning */
.selected-item-name {
  text-align: center;
  font-weight: bold;
  font-size: 1.8rem;
  color: var(--text-primary);
  padding: 8px 16px;
  background: var(--background-dark);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  max-width: 600px !important;
  min-width: 200px;
  white-space: nowrap !important; /* Keep text on a single line */
  overflow: visible !important; /* Make overflow visible */
  text-overflow: clip !important; /* Don't apply ellipsis */
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
  animation: fadeInOpacity 0.3s ease-in-out;
  display: inline-block;
  width: auto !important;
}

/* Update animation to only affect opacity, not position */
@keyframes fadeInOpacity {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Add these styles to App.css for the flashcard runner overlay */
.flashcard-runner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.75);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

/* Hide scrollbars when runner is active */
body:has(.flashcard-runner-overlay) {
  overflow: hidden;
}
